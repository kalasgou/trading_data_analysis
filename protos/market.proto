syntax = 'proto3';

package proto.market;

service Security {
    // 搜索股票
    // rpc search(Criteria) returns (InfoResponse) {}

    // 获取股票信息
    rpc fetchInfo(Stocks) returns (InfoResponse) {}
    
    // 获取股票报价（实时）
    rpc fetchRealtimeQuote(Stocks) returns (QuoteResponse) {}
    
    // 获取股票报价（延迟）
    // rpc fetchDelayedQuote(Stocks) returns (QuoteResponse) {}
}

service Chart {
    // 获取股票某天分时图
    rpc fetchTicks(TickRequest) returns (TickResponse) {}
    
    // 获取股票K线图（暂时先默认日K）
    rpc fetchKCharts(KChartRequest) returns (KChartResponse) {}
}

message Stock {
    string exchange_code = 1;
    string stock_code = 2;
}

message Criteria {
    string keywords = 1;
    string prdt_type = 2;
    string exchange_code = 3;
}

message Quotation {
    string price = 1;
    string open = 2;
    string close = 3;
    string average = 4;
    string day_high = 5;
    string day_low = 6;
    string last_close = 7;
}

message Tick {
    string price = 1;
    string average = 2;
    string chg_ratio = 3;
    string chg_sum = 4;
    string volume = 5;
    string turnover = 6;
    string time = 7;
}

message KChart {
    string open = 1;
    string close = 2;
    string high = 3;
    string low = 4;
    string chg_sum = 5;
    string chg_ratio = 6;
    string volume = 7;
    string turnover = 8;
    string date = 9;
}

message Status {
    int32 code = 1;
    string msg = 2;
}

message Stocks {
    repeated Stock stocks = 1;
}

message StockInfo {
    string exchange_code = 1;
    string market_code = 2;
    string prdt_type = 3;
    string stock_code = 4;
    string stock_name = 5;
    string ISIN = 6;
    string currency = 7;
    int32 board_lot = 8;
    int32 status = 9;
}

message QuoteResponse {    
    message Data {
        map<string, Quotation> quotes = 1;
    }
    Status status = 1;
    Data data = 2;
}

message InfoResponse {    
    message Data {
        map<string, StockInfo> info = 1;
    }
    Status status = 1;
    Data data = 2;
}

message TickRequest {
    Stock stock = 1;
    string date = 2;    // 格式：yyyy-mm-dd，不传的话默认最新一个交易日
}

message TickResponse {
    message Data {
        repeated Tick ticks = 1;
    }
    Status status = 1;
    Data data = 2;
}

message KChartRequest {
    Stock stock = 1;
    int32 page = 2;     // 从1开始
    int32 size = 3;     // 每页数量，默认20
    string type = 4;    // K线图类型，默认day
}

message KChartResponse {
    message Data {
        repeated KChart kcharts = 1;
    }
    Status status = 1;
    Data data = 2;
}